// // Mocks generated by Mockito 5.4.5 from annotations
// // in finance_manager/test/data/repositories/setting_repository_imp_test.dart.
// // Do not manually edit this file.
//
// // ignore_for_file: no_leading_underscores_for_library_prefixes
// import 'dart:async' as _i4;
//
// import 'package:finance_manager/data/datasource/sharepref_data_source.dart'
//     as _i3;
// import 'package:finance_manager/data/service/currency_service.dart' as _i5;
// import 'package:mockito/mockito.dart' as _i1;
// import 'package:mockito/src/dummies.dart' as _i6;
// import 'package:shared_preferences/shared_preferences.dart' as _i2;
//
// // ignore_for_file: type=lint
// // ignore_for_file: avoid_redundant_argument_values
// // ignore_for_file: avoid_setters_without_getters
// // ignore_for_file: comment_references
// // ignore_for_file: deprecated_member_use
// // ignore_for_file: deprecated_member_use_from_same_package
// // ignore_for_file: implementation_imports
// // ignore_for_file: invalid_use_of_visible_for_testing_member
// // ignore_for_file: must_be_immutable
// // ignore_for_file: prefer_const_constructors
// // ignore_for_file: unnecessary_parenthesis
// // ignore_for_file: camel_case_types
// // ignore_for_file: subtype_of_sealed_class
//
// class _FakeSharedPreferences_0 extends _i1.SmartFake
//     implements _i2.SharedPreferences {
//   _FakeSharedPreferences_0(
//     Object parent,
//     Invocation parentInvocation,
//   ) : super(
//           parent,
//           parentInvocation,
//         );
// }
//
// /// A class which mocks [ShareprefDataSource].
// ///
// /// See the documentation for Mockito's code generation for more information.
// class MockShareprefDataSource extends _i1.Mock
//     implements _i3.ShareprefDataSource {
//   MockShareprefDataSource() {
//     _i1.throwOnMissingStub(this);
//   }
//
//   @override
//   _i2.SharedPreferences get prefs => (super.noSuchMethod(
//         Invocation.getter(#prefs),
//         returnValue: _FakeSharedPreferences_0(
//           this,
//           Invocation.getter(#prefs),
//         ),
//       ) as _i2.SharedPreferences);
//
//   @override
//   String? getString(String? key) => (super.noSuchMethod(Invocation.method(
//         #getString,
//         [key],
//       )) as String?);
//
//   @override
//   _i4.Future<void> setString(
//     String? key,
//     String? value,
//   ) =>
//       (super.noSuchMethod(
//         Invocation.method(
//           #setString,
//           [
//             key,
//             value,
//           ],
//         ),
//         returnValue: _i4.Future<void>.value(),
//         returnValueForMissingStub: _i4.Future<void>.value(),
//       ) as _i4.Future<void>);
//
//   @override
//   bool? getBool(String? key) => (super.noSuchMethod(Invocation.method(
//         #getBool,
//         [key],
//       )) as bool?);
//
//   @override
//   _i4.Future<void> setBool(
//     String? key,
//     bool? value,
//   ) =>
//       (super.noSuchMethod(
//         Invocation.method(
//           #setBool,
//           [
//             key,
//             value,
//           ],
//         ),
//         returnValue: _i4.Future<void>.value(),
//         returnValueForMissingStub: _i4.Future<void>.value(),
//       ) as _i4.Future<void>);
// }
//
// /// A class which mocks [CurrencyService].
// ///
// /// See the documentation for Mockito's code generation for more information.
// class MockCurrencyService extends _i1.Mock implements _i5.CurrencyService {
//   MockCurrencyService() {
//     _i1.throwOnMissingStub(this);
//   }
//
//   @override
//   String get currencyCode => (super.noSuchMethod(
//         Invocation.getter(#currencyCode),
//         returnValue: _i6.dummyValue<String>(
//           this,
//           Invocation.getter(#currencyCode),
//         ),
//       ) as String);
//
//   @override
//   set currencyCode(String? _currencyCode) => super.noSuchMethod(
//         Invocation.setter(
//           #currencyCode,
//           _currencyCode,
//         ),
//         returnValueForMissingStub: null,
//       );
//
//   @override
//   void loadCurrency() => super.noSuchMethod(
//         Invocation.method(
//           #loadCurrency,
//           [],
//         ),
//         returnValueForMissingStub: null,
//       );
//
//   @override
//   _i4.Future<void> notifyCurrencyChanged() => (super.noSuchMethod(
//         Invocation.method(
//           #notifyCurrencyChanged,
//           [],
//         ),
//         returnValue: _i4.Future<void>.value(),
//         returnValueForMissingStub: _i4.Future<void>.value(),
//       ) as _i4.Future<void>);
// }
